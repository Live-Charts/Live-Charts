<UserControl x:Class="Wpf.CartesianChart.MixingSeries.MixingTypes"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Wpf.CartesianChart"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             xmlns:mixingSeries="clr-namespace:Wpf.CartesianChart.MixingSeries"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" d:DataContext="{d:DesignInstance mixingSeries:MixingTypes}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" TextWrapping="Wrap">
            Yes you can mix any series supported by a cartesian chart, just add the series and the chart wll handle it, charts are smart enough to scale according to the contained series.
            In this case we will only use ObservableClasses, so the chart updates automatically when a property changes, there are already some observable classes defined in thsi library, you
            can also build your own 
            <Hyperlink NavigateUri="http://lvcharts.net/#/examples/v1/iocp-wpf?path=WPF-Observable" RequestNavigate="OnLinkRequest">
                here
            </Hyperlink>
            is an example
        </TextBlock>
        <Button Grid.Row="1" Margin="7" Click="UpdateAllOnClick">Click me to update all points</Button>
        <lvc:CartesianChart Grid.Row="2" Series="{Binding SeriesCollection}"
                            Background="#303030">
            <lvc:CartesianChart.AxisY>
                <lvc:Axis>
                    <lvc:Axis.Separator>
                        <lvc:Separator Stroke="#606060"></lvc:Separator>
                    </lvc:Axis.Separator>
                </lvc:Axis>
            </lvc:CartesianChart.AxisY>
        </lvc:CartesianChart>
    </Grid>
</UserControl>
