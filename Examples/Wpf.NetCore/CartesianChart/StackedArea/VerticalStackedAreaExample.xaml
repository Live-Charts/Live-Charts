<UserControl x:Class="Wpf.CartesianChart.StackedArea.VerticalStackedAreaExample"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Wpf.CartesianChart.StackedArea"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" TextWrapping="Wrap">
            <Bold>New in 0.7.0</Bold> use VerticalStackedAreaSeries or StackedAreaSeries classes, depending on your needs, this series also supports 2 different stack modes: Percentage and Values <LineBreak/>
        </TextBlock>
        <StackPanel Orientation="Horizontal" Grid.Row="1">
            <Button Height="30" Click="UpdateAllOnClick" Width="100">
                Move All
            </Button>
            <Button Height="30" Click="ChangeStackModeOnClick" Width="120" Margin="10 0">
                Change StackMode
            </Button>
        </StackPanel>
        <lvc:CartesianChart Grid.Row="2" Series="{Binding SeriesCollection}" LegendLocation="Right"/>
    </Grid>
</UserControl>
